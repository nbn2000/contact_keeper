{"ast":null,"code":"import _toConsumableArray from \"/home/nbn2000/Desktop/Boilerplates/React Front to Back/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/nbn2000/Desktop/Boilerplates/React Front to Back/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default (function (state, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [].concat(_toConsumableArray(state.contacts), [action.payload]),\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(function (contact) {\n          return contact.id === action.payload.id ? action.payload : contact;\n        }),\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(function (contact) {\n          return contact.id !== action.payload;\n        }),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(function (contact) {\n          var regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","loading","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email","error"],"sources":["/home/nbn2000/Desktop/Boilerplates/React Front to Back/contact-keeper/client/src/context/contact/contactReducer.js"],"sourcesContent":["import {\n\tGET_CONTACTS,\n\tADD_CONTACT,\n\tDELETE_CONTACT,\n\tSET_CURRENT,\n\tCLEAR_CURRENT,\n\tUPDATE_CONTACT,\n\tFILTER_CONTACTS,\n\tCLEAR_FILTER,\n\tCONTACT_ERROR\n} from '../types'\n\nexport default (state, action) => {\n\tswitch(action.type) {\n\t\tcase GET_CONTACTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: action.payload,\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase ADD_CONTACT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: [...state.contacts, action.payload],\n\t\t\t\tloading: false\n\t\t\t}\n\t\t\tcase UPDATE_CONTACT:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcontacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n\t\t\t\t\tloading: false\n\t\t\t\t}\n\t\t\t\tcase DELETE_CONTACT:\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tcontacts: state.contacts.filter(contact => contact.id !== action.payload),\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t}\n\t\t\t\t\tcase SET_CURRENT:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tcurrent: action.payload\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase CLEAR_CURRENT:\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tcurrent: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase FILTER_CONTACTS:\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\tfiltered: state.contacts.filter(contact => {\n\t\t\t\t\t\t\t\t\t\tconst regex = new RegExp(`${action.payload}`, 'gi')\n\t\t\t\t\t\t\t\t\t\treturn contact.name.match(regex) || contact.email.match(regex)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase CLEAR_FILTER:\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tfiltered: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase CONTACT_ERROR:\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\t\terror: action.payload\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn state\n\t\t\t\t\t\t\n\t}\n}\n\n"],"mappings":";;AAAA,SACCA,YADD,EAECC,WAFD,EAGCC,cAHD,EAICC,WAJD,EAKCC,aALD,EAMCC,cAND,EAOCC,eAPD,EAQCC,YARD,EASCC,aATD,QAUO,UAVP;AAYA,gBAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;EACjC,QAAOA,MAAM,CAACC,IAAd;IACC,KAAKX,YAAL;MACC,yBACIS,KADJ;QAECG,QAAQ,EAAEF,MAAM,CAACG,OAFlB;QAGCC,OAAO,EAAE;MAHV;;IAKD,KAAKb,WAAL;MACC,yBACIQ,KADJ;QAECG,QAAQ,+BAAMH,KAAK,CAACG,QAAZ,IAAsBF,MAAM,CAACG,OAA7B,EAFT;QAGCC,OAAO,EAAE;MAHV;;IAKA,KAAKT,cAAL;MACC,yBACII,KADJ;QAECG,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmB,UAAAC,OAAO;UAAA,OAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAAxD;QAAA,CAA1B,CAFX;QAGCF,OAAO,EAAE;MAHV;;IAKA,KAAKZ,cAAL;MACC,yBACIO,KADJ;QAECG,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsB,UAAAF,OAAO;UAAA,OAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAA1B;QAAA,CAA7B,CAFX;QAGCC,OAAO,EAAE;MAHV;;IAKA,KAAKX,WAAL;MACC,yBACIM,KADJ;QAECU,OAAO,EAAET,MAAM,CAACG;MAFjB;;IAIA,KAAKT,aAAL;MACC,yBACIK,KADJ;QAECU,OAAO,EAAE;MAFV;;IAIA,KAAKb,eAAL;MACC,yBACIG,KADJ;QAECW,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsB,UAAAF,OAAO,EAAI;UAC1C,IAAMK,KAAK,GAAG,IAAIC,MAAJ,WAAcZ,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;UACA,OAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;QACA,CAHS;MAFX;;IAOA,KAAKd,YAAL;MACC,yBACIE,KADJ;QAECW,QAAQ,EAAE;MAFX;;IAIA,KAAKZ,aAAL;MACC,yBACIC,KADJ;QAECiB,KAAK,EAAEhB,MAAM,CAACG;MAFf;;IAIL;MACC,OAAOJ,KAAP;EAtDL;AAyDA,CA1DD"},"metadata":{},"sourceType":"module"}