{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/home/nbn2000/Desktop/Boilerplates/React Front to Back/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar path = require('path');\n\nvar WIN_SLASH = '\\\\\\\\/';\nvar WIN_NO_SLASH = \"[^\".concat(WIN_SLASH, \"]\");\n/**\n * Posix glob regex\n */\n\nvar DOT_LITERAL = '\\\\.';\nvar PLUS_LITERAL = '\\\\+';\nvar QMARK_LITERAL = '\\\\?';\nvar SLASH_LITERAL = '\\\\/';\nvar ONE_CHAR = '(?=.)';\nvar QMARK = '[^/]';\nvar END_ANCHOR = \"(?:\".concat(SLASH_LITERAL, \"|$)\");\nvar START_ANCHOR = \"(?:^|\".concat(SLASH_LITERAL, \")\");\nvar DOTS_SLASH = \"\".concat(DOT_LITERAL, \"{1,2}\").concat(END_ANCHOR);\nvar NO_DOT = \"(?!\".concat(DOT_LITERAL, \")\");\nvar NO_DOTS = \"(?!\".concat(START_ANCHOR).concat(DOTS_SLASH, \")\");\nvar NO_DOT_SLASH = \"(?!\".concat(DOT_LITERAL, \"{0,1}\").concat(END_ANCHOR, \")\");\nvar NO_DOTS_SLASH = \"(?!\".concat(DOTS_SLASH, \")\");\nvar QMARK_NO_DOT = \"[^.\".concat(SLASH_LITERAL, \"]\");\nvar STAR = \"\".concat(QMARK, \"*?\");\nvar POSIX_CHARS = {\n  DOT_LITERAL: DOT_LITERAL,\n  PLUS_LITERAL: PLUS_LITERAL,\n  QMARK_LITERAL: QMARK_LITERAL,\n  SLASH_LITERAL: SLASH_LITERAL,\n  ONE_CHAR: ONE_CHAR,\n  QMARK: QMARK,\n  END_ANCHOR: END_ANCHOR,\n  DOTS_SLASH: DOTS_SLASH,\n  NO_DOT: NO_DOT,\n  NO_DOTS: NO_DOTS,\n  NO_DOT_SLASH: NO_DOT_SLASH,\n  NO_DOTS_SLASH: NO_DOTS_SLASH,\n  QMARK_NO_DOT: QMARK_NO_DOT,\n  STAR: STAR,\n  START_ANCHOR: START_ANCHOR\n};\n/**\n * Windows glob regex\n */\n\nvar WINDOWS_CHARS = _objectSpread({}, POSIX_CHARS, {\n  SLASH_LITERAL: \"[\".concat(WIN_SLASH, \"]\"),\n  QMARK: WIN_NO_SLASH,\n  STAR: \"\".concat(WIN_NO_SLASH, \"*?\"),\n  DOTS_SLASH: \"\".concat(DOT_LITERAL, \"{1,2}(?:[\").concat(WIN_SLASH, \"]|$)\"),\n  NO_DOT: \"(?!\".concat(DOT_LITERAL, \")\"),\n  NO_DOTS: \"(?!(?:^|[\".concat(WIN_SLASH, \"])\").concat(DOT_LITERAL, \"{1,2}(?:[\").concat(WIN_SLASH, \"]|$))\"),\n  NO_DOT_SLASH: \"(?!\".concat(DOT_LITERAL, \"{0,1}(?:[\").concat(WIN_SLASH, \"]|$))\"),\n  NO_DOTS_SLASH: \"(?!\".concat(DOT_LITERAL, \"{1,2}(?:[\").concat(WIN_SLASH, \"]|$))\"),\n  QMARK_NO_DOT: \"[^.\".concat(WIN_SLASH, \"]\"),\n  START_ANCHOR: \"(?:^|[\".concat(WIN_SLASH, \"])\"),\n  END_ANCHOR: \"(?:[\".concat(WIN_SLASH, \"]|$)\")\n});\n/**\n * POSIX Bracket Regex\n */\n\n\nvar POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE: POSIX_REGEX_SOURCE,\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n  // Digits\n  CHAR_0: 48,\n\n  /* 0 */\n  CHAR_9: 57,\n\n  /* 9 */\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65,\n\n  /* A */\n  CHAR_LOWERCASE_A: 97,\n\n  /* a */\n  CHAR_UPPERCASE_Z: 90,\n\n  /* Z */\n  CHAR_LOWERCASE_Z: 122,\n\n  /* z */\n  CHAR_LEFT_PARENTHESES: 40,\n\n  /* ( */\n  CHAR_RIGHT_PARENTHESES: 41,\n\n  /* ) */\n  CHAR_ASTERISK: 42,\n\n  /* * */\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38,\n\n  /* & */\n  CHAR_AT: 64,\n\n  /* @ */\n  CHAR_BACKWARD_SLASH: 92,\n\n  /* \\ */\n  CHAR_CARRIAGE_RETURN: 13,\n\n  /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94,\n\n  /* ^ */\n  CHAR_COLON: 58,\n\n  /* : */\n  CHAR_COMMA: 44,\n\n  /* , */\n  CHAR_DOT: 46,\n\n  /* . */\n  CHAR_DOUBLE_QUOTE: 34,\n\n  /* \" */\n  CHAR_EQUAL: 61,\n\n  /* = */\n  CHAR_EXCLAMATION_MARK: 33,\n\n  /* ! */\n  CHAR_FORM_FEED: 12,\n\n  /* \\f */\n  CHAR_FORWARD_SLASH: 47,\n\n  /* / */\n  CHAR_GRAVE_ACCENT: 96,\n\n  /* ` */\n  CHAR_HASH: 35,\n\n  /* # */\n  CHAR_HYPHEN_MINUS: 45,\n\n  /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60,\n\n  /* < */\n  CHAR_LEFT_CURLY_BRACE: 123,\n\n  /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91,\n\n  /* [ */\n  CHAR_LINE_FEED: 10,\n\n  /* \\n */\n  CHAR_NO_BREAK_SPACE: 160,\n\n  /* \\u00A0 */\n  CHAR_PERCENT: 37,\n\n  /* % */\n  CHAR_PLUS: 43,\n\n  /* + */\n  CHAR_QUESTION_MARK: 63,\n\n  /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62,\n\n  /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125,\n\n  /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93,\n\n  /* ] */\n  CHAR_SEMICOLON: 59,\n\n  /* ; */\n  CHAR_SINGLE_QUOTE: 39,\n\n  /* ' */\n  CHAR_SPACE: 32,\n\n  /*   */\n  CHAR_TAB: 9,\n\n  /* \\t */\n  CHAR_UNDERSCORE: 95,\n\n  /* _ */\n  CHAR_VERTICAL_LINE: 124,\n\n  /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,\n\n  /* \\uFEFF */\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n  extglobChars: function extglobChars(chars) {\n    return {\n      '!': {\n        type: 'negate',\n        open: '(?:(?!(?:',\n        close: \"))\".concat(chars.STAR, \")\")\n      },\n      '?': {\n        type: 'qmark',\n        open: '(?:',\n        close: ')?'\n      },\n      '+': {\n        type: 'plus',\n        open: '(?:',\n        close: ')+'\n      },\n      '*': {\n        type: 'star',\n        open: '(?:',\n        close: ')*'\n      },\n      '@': {\n        type: 'at',\n        open: '(?:',\n        close: ')'\n      }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n  globChars: function globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}