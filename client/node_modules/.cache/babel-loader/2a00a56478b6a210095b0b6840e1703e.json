{"ast":null,"code":"var path = require('path');\n\nvar utils = require('./utils');\n\nvar merge = utils.merge;\nvar bus = utils.bus;\n\nvar spawn = require('child_process').spawn;\n\nmodule.exports = function spawnCommand(command, config, eventArgs) {\n  var stdio = ['pipe', 'pipe', 'pipe'];\n\n  if (config.options.stdout) {\n    stdio = ['pipe', process.stdout, process.stderr];\n  }\n\n  var env = merge(process.env, {\n    FILENAME: eventArgs[0]\n  });\n  var sh = 'sh';\n  var shFlag = '-c';\n  var spawnOptions = {\n    env: merge(config.options.execOptions.env, env),\n    stdio: stdio\n  };\n\n  if (!Array.isArray(command)) {\n    command = [command];\n  }\n\n  if (utils.isWindows) {\n    // if the exec includes a forward slash, reverse it for windows compat\n    // but *only* apply to the first command, and none of the arguments.\n    // ref #1251 and #1236\n    command = command.map(function (executable) {\n      if (executable.indexOf('/') === -1) {\n        return executable;\n      }\n\n      return executable.split(' ').map(function (e, i) {\n        if (i === 0) {\n          return path.normalize(e);\n        }\n\n        return e;\n      }).join(' ');\n    }); // taken from npm's cli: https://git.io/vNFD4\n\n    sh = process.env.comspec || 'cmd';\n    shFlag = '/d /s /c';\n    spawnOptions.windowsVerbatimArguments = true;\n  }\n\n  var args = command.join(' ');\n  var child = spawn(sh, [shFlag, args], spawnOptions);\n\n  if (config.required) {\n    var emit = {\n      stdout: function stdout(data) {\n        bus.emit('stdout', data);\n      },\n      stderr: function stderr(data) {\n        bus.emit('stderr', data);\n      }\n    }; // now work out what to bind to...\n\n    if (config.options.stdout) {\n      child.on('stdout', emit.stdout).on('stderr', emit.stderr);\n    } else {\n      child.stdout.on('data', emit.stdout);\n      child.stderr.on('data', emit.stderr);\n      bus.stdout = child.stdout;\n      bus.stderr = child.stderr;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}